● Neovim + Godot Setup on Arch Linux

  1. Install Required Packages

  # Godot (you have this)
  sudo pacman -S extra/godot

  # Android development (for Google Play export)
  yay -S android-sdk android-sdk-build-tools android-sdk-cmdline-tools-latest android-sdk-platform-tools

  # Optional but recommended
  sudo pacman -S jdk17-openjdk

  2. Neovim LSP Configuration

  -- In your Neovim config (init.lua or lsp.lua)
  local lspconfig = require('lspconfig')

  -- GDScript LSP setup
  lspconfig.gdscript.setup {
    cmd = { "ncat", "localhost", "6005" }, -- May need netcat fallback
    -- cmd default works on most Linux systems
  }

  3. Treesitter for Syntax Highlighting

  require'nvim-treesitter.configs'.setup {
    ensure_installed = {'gdscript', 'godot_resource', 'gdshader'},
    highlight = { enable = true },
  }

  4. Neovim External Editor Setup

  -- Auto-start server for Godot integration
  local pipepath = vim.fn.stdpath("cache") .. "/server.pipe"
  if not vim.loop.fs_stat(pipepath) then
      vim.fn.serverstart(pipepath)
  end

  5. Godot Editor Configuration

  - Editor Settings → Network → Language Server: Enable (port 6005)
  - Editor Settings → Text Editor → External:
    - Use External Editor: ✓
    - Exec Path: nvim
    - Exec Flags: +{line} {file}

  6. Android Export Setup

  - Editor Settings → Export → Android:
    - Android SDK Path: /opt/android-sdk
    - Debug Keystore: ~/.android/debug.keystore

  Required Neovim Plugins

  - nvim-lspconfig (LSP)
  - nvim-treesitter (syntax highlighting)
  - Optional: vim-godot plugin for enhanced integration

  That's it! LSP works when Godot is running with your project open.
